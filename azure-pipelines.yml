# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
#Multi-configuration and multi-agent job options are not exported to YAML. Configure these options using documentation guidance: https://docs.microsoft.com/vsts/pipelines/process/phases

jobs:
- job: 'Test'

  pool:
    strategy:
      matrix:
        linux:
          vmImage: 'Hosted Ubuntu 1604'
        mac:
          vmImage: 'Hosted macOS'
        windows:
          vmImage: 'Hosted VS2017'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python $(python.version)'
    inputs:
      versionSpec: '$(python.version)'

  - script: 'reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f'
    displayName: 'Enable long paths on Windows'
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

  - script: 'python -m pip install --upgrade pip && pip install --upgrade setuptools && python setup.py install'
    displayName: 'Install dependencies'

  - script: 'pip install pycodestyle && pycodestyle econml'
    failOnStderr: true
    displayName: Linting
    continueOnError: true

  - script: 'python setup.py build_sphinx -W'
    displayName: 'Build documentation'

  - powershell: Write-Host '##vso[task.setvariable variable=PYTEST_ADDOPTS]-m "not slow"'
    displayName: 'Define markers for non-nightly builds'
    condition: and(succeeded(), eq(variables['runAllTests'], 'false'), ne(variables['Build.Reason'], 'Schedule'))

  - script: 'python setup.py pytest'
    displayName: 'Unit tests'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/test-results.xml'
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
